name: CI/CD PIPELINE
run-name: ${{ github.actor }} is running Unit Test on GitHub Actions ðŸš€
on: [push]
jobs:
  CI-Flow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Download Pretrain Model
        run: |
          python ./model/download_pretrain_model.py
      - name: Test with pytest
        run: |
          pip install pytest pytest-cov
          pytest ./test --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
        env:
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          ES_USERNAME: ${{ secrets.ES_USERNAME }}
          ES_PASSWORD: ${{ secrets.ES_PASSWORD }}
          ES_HOST: ${{ env.ES_HOST }}
      - name: Pre-Commit Check
        run: |
          pre-commit install --install-hooks
          pre-commit run --all-files
      - name: Build image
        run: |
          docker build --platform linux/amd64 --tag search-etl -f Pipeline.Dockerfile .
      - name: Save image to github artifact
        uses: actions/upload-artifact@v2
        with:
          name: search-etl
          path: |
            search-etl


  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: myimage
          path: myimage
